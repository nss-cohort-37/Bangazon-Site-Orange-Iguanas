@model Bangazon.Models.ProductViewModels.ProductFormViewModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Details";
    var currentUser = await UserManager.GetUserAsync(User);
}

<div class="likeButtonsContainer">
    <h1> @Html.DisplayFor(model => model.Title)</h1>
    @using (Html.BeginForm("UserLikePreference", "Products"))
    {<div class="likeButton">
            <input asp-for="IsLiked" type="hidden" name="liked" value="True" class="form-control" />
            <input asp-for="ProductId" type="hidden" value="@Model.ProductId" class="form-control" />
            <input type="submit" value="Like" class="btn btn-primary" />
        </div>
    }
    @using (Html.BeginForm("UserLikePreference", "Products"))
    {
        <div class="likeButton">
            <input asp-for="IsLiked" type="hidden" name="liked" value="False" class="form-control" />
            <input asp-for="ProductId" type="hidden" value="@Model.ProductId" class="form-control" />
            <input type="submit" value="Dislike" class="btn btn-primary" />
        </div>
    }
</div>

<div>

    <hr />

    <dl class="row">

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateCreated)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Quantity)
        </dt>
        @if (Model.Quantity == 0)
        {
            <dd class="col-sm-10">Item Out of Stock</dd>
        }
        else
        {
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Quantity)
            </dd>
        }

        @if (Model.City != null)
        {
            <dt class="col-sm-2">
                Location
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.City)
            </dd>
        }

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Active)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Active)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ProductTypeId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ProductType.Label)
        </dd>
    </dl>
    @if (Model.UserId != currentUser.Id && Model.Quantity > 0)
    {
        @using (Html.BeginForm("AddToOrder", "Products"))
        {
            <input asp-for="ProductId" type="hidden" value="@Model.ProductId" class="form-control" />
            <input type="submit" value="Add to Order" class="btn btn-primary" />
        }
    }
</div>
<div>
    <a class="btn btn-link" asp-controller="Home" asp-action="Index">Back to List</a>
</div>

